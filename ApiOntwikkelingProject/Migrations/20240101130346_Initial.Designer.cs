// <auto-generated />
using System;
using ApiOntwikkelingProject.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiOntwikkelingProject.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20240101130346_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Camper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClubId");

                    b.ToTable("Campers");
                });

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Camping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Campings");
                });

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CampingId")
                        .HasColumnType("int");

                    b.Property<int>("HeadOfficeAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CampingId");

                    b.HasIndex("HeadOfficeAddressId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Properties.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Camper", b =>
                {
                    b.HasOne("ApiOntwikkelingProject.Entities.Properties.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiOntwikkelingProject.Entities.Club", null)
                        .WithMany("Members")
                        .HasForeignKey("ClubId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Camping", b =>
                {
                    b.HasOne("ApiOntwikkelingProject.Entities.Properties.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Club", b =>
                {
                    b.HasOne("ApiOntwikkelingProject.Entities.Camping", null)
                        .WithMany("MemberedClubs")
                        .HasForeignKey("CampingId");

                    b.HasOne("ApiOntwikkelingProject.Entities.Properties.Address", "HeadOfficeAddress")
                        .WithMany()
                        .HasForeignKey("HeadOfficeAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeadOfficeAddress");
                });

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Camping", b =>
                {
                    b.Navigation("MemberedClubs");
                });

            modelBuilder.Entity("ApiOntwikkelingProject.Entities.Club", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
